import express, { Router } from 'express';
export interface Route {
    toExpressRoute(): Router;
}
export declare class Server {
    private readonly _serviceName;
    private readonly _blockPath;
    private readonly _express;
    private _routes;
    private _config?;
    private _serverPort?;
    private _serverHost?;
    constructor(serviceName: string, blockPath: string);
    /**
     * Get access to the express app to make changes, add filters etc. directly
     *
     * @return {express}
     */
    express(): express.Express;
    /**
     * Add Route to server
     * @param {Route} route
     */
    addRoute(route: Route): void;
    configureAssets(distFolder: string, webpackConfig: any): void;
    /**
     * Starts server
     *
     * @param [portType {string}] the type of port to listen on. Defaults to "rest"
     * @return {Promise<void>}
     */
    start(portType: string): void;
    _configureCatchAll(): void;
    _configureHealthCheck(): void;
    /**
     *
     * @param [portType {string}] the type of port to listen on. Defaults to "rest"
     * @return {Promise<void>}
     * @private
     */
    _start(portType: string): Promise<unknown>;
}
