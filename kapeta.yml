kind: kapeta/block-type-frontend:1.3.4
metadata:
  name: opemipo_disu/todo-ui
  visibility: private
  title: To-do UI
spec:
  entities:
    types:
      - type: dto
        name: Task
        description: null
        properties:
          text:
            type: string
            description: null
            secret: false
            required: false
            global: false
          id:
            type: string
            description: null
            secret: false
            required: false
            global: false
          createdAt:
            type: date
            description: null
            secret: false
            required: false
            global: false
      - type: dto
        name: CreateTask
        description: null
        properties:
          text:
            type: string
            description: null
            secret: false
            required: false
            global: false
    source:
      type: kapeta-dsl
      value: |-
        Task {
        	text: string
        	id: string
        	createdAt: date
        }

        CreateTask {
        	text: string
        }
  providers:
    - kind: kapeta/resource-type-web-page:0.0.12
      metadata:
        name: todolist
      spec:
        port:
          name: http
          type: web
        path: /
  consumers:
    - kind: kapeta/resource-type-rest-client:1.0.14
      metadata:
        name: todoapi
      spec:
        port:
          name: rest
          type: rest
        methods:
          getAllTasks:
            responseType:
              ref: Task[]
            method: GET
            path: /tasks
            description: Getting all tasks
            arguments: {}
          addNewTask:
            responseType:
              ref: Task
            method: POST
            path: /tasks
            description: Add a task
            arguments:
              task:
                ref: CreateTask
                transport: BODY
          deleteAllTasks:
            responseType:
              type: void
            method: DELETE
            path: /tasks
            description: Delete All Tasks
            arguments: {}
          deleteSingleTask:
            responseType:
              type: void
            method: DELETE
            path: /tasks/{id}
            description: Deleting a task
            arguments:
              id:
                type: string
                transport: PATH
          editTask:
            responseType:
              ref: Task
            method: POST
            path: /tasks/{id}
            description: Edit a task
            arguments:
              id:
                type: string
                transport: PATH
              task:
                ref: CreateTask
                transport: BODY
        source:
          type: kapeta-dsl
          value: |-
            //Getting all tasks
            @GET("/tasks")
            getAllTasks(): Task[]

            //Add a task
            @POST("/tasks")
            addNewTask(@Body task:CreateTask): Task

            //Delete All Tasks
            @DELETE("/tasks")
            deleteAllTasks(): void

            //Deleting a task
            @DELETE("/tasks/{id}")
            deleteSingleTask(@Path id:string): void

            //Edit a task
            @POST("/tasks/{id}")
            editTask(@Path id:string, @Body task:CreateTask): Task
  target:
    kind: kapeta://kapeta/language-target-react-ts:0.2.3
